use uo;
use os;
use util;

include ":attributes:attributes";
include "include/statMod";
include ":virtue:noto";
include "include/reportMurder";
include ":timedScripts:poisonUtil";
include "include/utility";

var allmyjunk := array {};
var stackstuff := 0;


program chrdeath(corpse, ghost)
    VS_AdjustVirtue(ghost, "Sacrifice", 1, 75);
	EraseObjProperty(ghost, "IsMeditating");
	EraseObjProperty(ghost, "Protection");
	ghost.SetPoisoned(0);
	while(TS_GetTimerNames(ghost, "P").size() > 0)
		TS_CurePoison(ghost, 100000, "P", 5);
	endwhile
	var killer := GetObjProperty(ghost, "LastHit");
	if(killer != error)
		AdjustNoto((SystemFindObjectBySerial(killer[2], SYSFIND_SEARCH_OFFLINE_MOBILES)), ghost);
	endif
	var fame := CInt(GetObjProperty(ghost, "Fame"));
	fame := (fame - CInt(fame / 20));
	SetObjProperty(ghost, "Fame", fame);
	SetObjProperty(corpse,"serial", ghost.serial);
	dismount(corpse);
	CheckForAutoRes(ghost, corpse);
	CheckForDivineRes(ghost, corpse);
	var corpsenamearray := SplitWords(corpse.name);
	var corpsenamearraylen := len(corpsenamearray);
	var x, corpsename := "";
	for (x := 4; x <= corpsenamearraylen; x := x + 1)
		corpsename := corpsename + " " + corpsenamearray[x];
	endfor
	if(len(ghost.reportables)>0)
		SendReportGump(ghost);
	endif

endprogram

function CheckForAutoRes(who, corpse)
	if(CInt(GetObjProperty(corpse, "AutoRes")) == 1)
		Resurrect(who);
		AP_SetVital(who, VITALID_LIFE, AP_GetVitalMaximumValue(who, VITALID_LIFE));
		AP_SetVital(who, VITALID_MANA, AP_GetVitalMaximumValue(who, VITALID_MANA));
		AP_SetVital(who, VITALID_STAMINA, AP_GetVitalMaximumValue(who, VITALID_STAMINA));
		var mypack := who.backpack;
		if(!mypack)
			return;
		endif
		foreach thing in EnumerateItemsInContainer(corpse)
			if(thing.container == corpse)
				if(!EquipItem(who, thing))
					MoveItemToContainer(thing, mypack);
				endif
			endif
		endforeach
	endif
endfunction

function CheckForDivineRes(who, corpse)
	if ( CInt( GetObjProperty(corpse, "DivineRes") ) == 1 )
		EraseObjProperty(corpse, "DivineRes");
		EraseObjProperty(who, "DivineRes");
		Resurrect(who);
		PrintTextAbove(who, who.name + " has been restored by the Gods!");
		PlaySoundEffect(who, 0x11e);
		var itemlist := EnumerateItemsInContainer(corpse);
		var mypack := GetEquipmentByLayer(who, 0x15);
		foreach x in itemlist
			if (!EquipItem(who, x) )
				if (x.container == corpse)
					MoveItemToContainer(x, mypack);
				endif
			endif
		endforeach
		AP_SetVital(who, VITALID_LIFE, who.maxhp);
		AP_SetVital(who, VITALID_MANA, who.maxmana);
		AP_SetVital(who, VITALID_STAMINA, who.maxstamina);
	endif
endfunction

function dismount(corpse)
	var mount := GetEquipmentByLayer( corpse, 25 );
	// Added for Reward Mounts.
	if(GetObjProperty(mount, "RewardMount"))
		DestroyItem( mount );
		return;
	endif
	// End Reward Mount adition.
	foreach item in EnumerateItemsInContainer(corpse)
		if (item.objtype == 0xf021)
			mount := item;
			break;
		endif
	endforeach
	if (!mount)
		return;
	endif
	var animal := SystemFindObjectBySerial(CInt(GetObjProperty(mount,"serial")));
	animal.facing := corpse.facing;
	EraseObjProperty(animal, "mounted");
	EraseObjProperty(animal, "mounted_on");
	MoveObjectToLocation( animal, corpse.x, corpse.y, corpse.z, corpse.realm, MOVEOBJECT_FORCELOCATION);
	DestroyItem(mount);
endfunction

function remove_poison (cast_on)

if (TS_GetTimerNames(cast_on, "P").size() > 0)
	TS_CurePoison(cast_on, 100000, "P", 5);
	if (TS_GetTimerNames(cast_on, "P").size() > 0)
		TS_CurePoison(cast_on, 100000, "P", 5);
	endif
endif

endfunction

///////////////////
//  Does the actual work of moving the item
///////////////////

function MoveTheItem(item, oldcontainer, newcontainer)
	if (IsStackableItem(item) )
		if (stackstuff)
			foreach thing in allmyjunk
				if (item.objtype == thing.objtype && item.color == thing.color)
					if (thing.container != oldcontainer )
						AddAmount(thing, item.amount);
						DestroyItem(item);
					endif
				endif
			endforeach
		endif
		CreateItemInContainer(newcontainer, item.objtype, item.amount);
		DestroyItem(item);
	else
		MoveItemToContainer(item, newcontainer);
	endif
endfunction


